var fs = require('fs');
var pathModule = require('path');
var Q = require('q');
var config = require('../config.js');

//const
var DATAJSDIR = config.DATAJSDIR;

function generator(type_name, func_content) {
  var _type_name = type_name;
  var _js_file_path = pathModule.join(DATAJSDIR, _type_name + ".js");
  var _func_content = func_content;
  var prototype =
    "/**\n"
  + " * @Copyright:\n"
  + " *\n"
  + " * @Description: " + _type_name + " type's methods.\n"
  + " *\n"
  + " * @author: Xiquan \n"
  + " *\n"
  + " * @Data:" + (new Date()).toString() + "\n"
  + " *\n"
  + " * @version:0.1.0\n"
  + " **/\n"
  + "var pathModule = require('path');\n"
  + "var fs = require('fs');\n"
  + "var fs_extra = require('fs-extra');\n"
  + "var config = require('../config');\n"
  + "var utils = require('../utils');\n"
  + "var uniqueID = require('../uniqueID');\n"
  + "var tagsHandle = require('../commonHandle/tagsHandle');\n"
  + "var commonHandle = require('../commonHandle/commonHandle');\n"
  + "var typeHandle = require('../commonHandle/typeHandle');\n"
  + "var Q = require('q');\n"
  + "\n"
  +"//@const\n"
  + 'var CATEGORY_NAME = "' + _type_name + '";\n'
  + "\n"
  + "function createData(items) {\n"
  + "  return commonHandle.dataStore(items, extraInfo);\n"
  + "}\n"
  + "exports.createData = createData;\n"
  + "\n"
  + "function extraInfo(item) {\n"
  + "  return getExtraInfo(item)\n"
  + "    .then(function(info_) {\n"
  + "      return typeHandle.getProperty(CATEGORY_NAME)\n"
  + "        .then(function(property_list_) {\n"
  + "          for (var _property in property_list_) {\n"
  + "            property_list_[_property] = info_[_property] || 'undefined';\n"
  + "          }\n"
  + "          return property_list_;\n"
  + "        });\n"
  + "    });\n"
  + "}\n"
  + "\n"
  + "function getExtraInfo(item, callback) {\n"
  + "  var deferred = Q.defer();\n"
  + "  getPropertyInfo(item, function(err, result) {\n"
  + "    if (err) {\n"
  + "      deferred.reject(new Error(err));\n"
  + "    } else {\n"
  + "      deferred.resolve(result);\n"
  + "    }\n"
  + "  });\n"
  + "  return deferred.promise;\n"
  + "}\n"
  + "\n"
  + "function getOpenInfo(item) {\n"
  + "  if (item == null) {\n"
  + "    config.riolog('read data : ' + item);\n"
  + "    return undefined;\n"
  + "  }\n"
  + "  config.riolog('read data : ' + item.path);\n"
  + "  var source;\n"
  + "  if (item.postfix == null) {\n"
  + "    source = {\n"
  + "      openmethod: 'alert',\n"
  + "      content: item.path + ' self defined type.'\n"
  + "    };\n"
  + "  } else {\n"
  + "    var _exec = require('child_process');\n"
  + "    _exec.exec(s_command, function() {});\n"
  + "    if (supportedKeySent === true) {\n"
  + "      source.windowname = s_windowname;\n"
  + "    }\n"
  + "  }\n"
  + "  return source;\n"
  + "}\n"
  + "exports.getOpenInfo = getOpenInfo;\n"
  + "\n"
  +_func_content.toString() + "\n"

  return Q.nfcall(fs.writeFile, _js_file_path, prototype);
}
exports.generator = generator;