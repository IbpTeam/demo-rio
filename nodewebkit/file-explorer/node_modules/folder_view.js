var events = require('events');
var util = require('util');
//var mime = require('mime');
//var netcomm = require('/home/cos/Templates/demo-rio/nodewebkit/backend/apilocalHandle.js');

//var fs = require('fs');
//eval(fs.readFileSync('../backend/api.js')+'');
//eval(fs.readFileSync('../backend/apiHttpHandle.js')+'');
function browser(){
  var ua = window.navigator.userAgent,
      ret = "";
  //console.log('ua', ua);
  if(/Firefox/g.test(ua)){
    ua = ua.split(" ");
    ret="Firefox|"+ua[ua.length-1].split("/")[1];
  }
  else if(/Nodejs/g.test(ua)){
    ua = ua.split(" ");
    ret = clienet_local + "|"+ua[ua.length-1].split("/")[1];
  }
  else if(/MSIE/g.test(ua)){
    ua = ua.split(";");
    ret = "IE|"+ua[1].split(" ")[2];
  }
  else if(/Opera/g.test(ua)){
    ua = ua.split(" ");
    ret = "Opera|"+ua[ua.length-1].split("/")[1];
  }
  else if(/Chrome/g.test(ua)){
    ua = ua.split(" ");
    ret = "Chrome|"+ua[ua.length-2].split("/")[1];
  }
  else if(/^apple\s+/i.test(window.navigator.vendor)){
    ua = ua.split(" ");
    ret = "Safair|"+ua[ua.length-2].split("/")[1];
  }
  else{
    ret = "未知浏览器";
  }
  return ret.split("|");
}

var r=browser();
var client_type = r[0];
var clienet_local = 'Nodejs';
//var ip='192.168.160.176';
var ip = '127.0.0.1';
var port = ':8888';
function getAllCateFromHttp(getAllCateCb) {
//  var studentData = CollectionData();
    var ajax_url = '';
    console.log('client_type', client_type);
    console.log('clienet_local', clienet_local);
    if(client_type == clienet_local){
        ajax_url = '/getAllCate';
    }else{
        ajax_url = 'http://' + ip + port + '/getAllCate';
    }
    console.log('ajax_url', ajax_url);
  $.ajax({
    url: ajax_url,
    type: "post",
    contentType: "application/json;charset=utf-8",
    dataType: "json",
    data: '{"func":"getAllCate","arg":"null"}',
    success: function(result) {
      var cates = new Array();
      result.forEach(function (each){
        cates.push({
          id:each.id,
          type:each.type,
          path:each.path
        });
      });
      getAllCateCb(cates);
    },
    error: function(e) {
      getAllCateCb(e);
    }
  });
}

function getAllDataByCateFromHttp(getAllDataByCateCb,cate) {
//  var studentData = CollectionData();
    var ajax_url = '';
    if(client_type == clienet_local){
        ajax_url = '/getAllDataByCate';
    }else{
        ajax_url = 'http://' + ip + port + '/getAllDataByCate';
    }
  $.ajax({
    url: ajax_url,
    type: "post",
    contentType: "application/json;charset=utf-8",
    dataType: "json",
    data: '{"func":"getAllDataByCate","arg":"'+cate+'"}',
    success: function(result) {
      var cates = new Array();
      result.forEach(function (each){
        cates.push({
          id:each.id,
          filename:each.filename,
          postfix:each.postfix,
          path:each.path
        });
      });
      getAllDataByCateCb(cates);
    },
    error: function(e) {
      getAllDataByCateCb(e);
    }
  });
}
function getAllContactsFromHttp(getAllContactsCb) {
//  var studentData = CollectionData();
    var ajax_url = '';
    if(client_type == clienet_local){
        ajax_url = '/getAllContacts';
    }else{
        ajax_url = 'http://' + ip + port + '/getAllContacts';
    }
  $.ajax({
    url: ajax_url,
    type: "post",
    contentType: "application/json;charset=utf-8",
    dataType: "json",
    data: '{"func":"getAllContacts","arg":"null"}',
    success: function(result) {
      var contacts = new Array();
      result.forEach(function (each){
        contacts.push({
          id:each.id,
          name:each.name,
          photoPath:each.photoPath
        });
      });
      getAllContactsCb(contacts);
    },
    error: function(e) {
      getAllContactsCb(e);
    }
  });
}
//console.log('current path in folder_view.js:', process.cwd());
// Template engine
function gen_files_view(files){
    var result = [];
    for(var i=0; i<files.length; i++){
        result.push('<div class="file" data-path="' + files[i].path + '">');
        if(files[i].img){
            if(client_type == clienet_local){ 
                result.push('<div class="icon"> <img src="' + files[i].img + '"></div>');
            }else{
                result.push('<div class="icon"> <img src="' + files[i].img + '?query=absolute"></div>');
            }
        }else{
            result.push('<div class="icon"> <img src="icons/' + files[i].type + '.png"></div>');
        }
        result.push('<div class="name">' + files[i].name + '</div>');
        result.push('</div>');
    }
    return result.join('\n');
}
// Our type
function Folder(jquery_element, sidebar) {
	events.EventEmitter.call(this);
	this.element = jquery_element;
    this.side_bar = sidebar;
	var self = this;
	this.element.parent().on('mousedown', function(e) {
	    console.log('in this.element mouse down');
//		console.log('e.pageX', e.pageX);
//		console.log('e.pageY', e.pageY);
//		console.log('e.target', e.target);
//		console.log('e.timeStamp', e.timeStamp);
//		console.log('e.type', e.type);
//		console.log('e.which', e.which);	
        
		switch(e.which){
		case 3:
            //var contents = ['创建文件夹', '创建文档', '排列项目', '属性'];
            var contents = ['aaa', 'bbb', 'ccc', 'ddd'];
		    var popup_menu = self.gen_popup_menu(contents);
            self.element.append(popup_menu);            
//            var offset = self.element.parent().offset();
//            console.log('page:', e.pageX, e.pageY);
//            console.log('offset:', offset.left, offset.top);
            self.element.children('.dropdown-menu').css({
                'display':'block',
                'position': 'fixed',
                'left': (e.pageX) + 'px',
                'top': (e.pageY) + 'px'
            });
            $(popup_menu).on('mousedown', function(e){
                console.log('in popup menu e.target', $(e.target).text());
		        //e.stopPropagation();  
            });
		    break;
        case 1:
		    self.element.children('.focus').removeClass('focus');
            self.element.children('.dropdown-menu').css({'display':'none'});
            break;
        }
		//e.stopPropagation();
	});
	/*
	// Click on blank
	this.element.parent().on('click', function(e) {
		self.element.children('.focus').removeClass('focus');
        self.element.children('.dropdown-menu').css({'display':'none'});
	});
	// Click on file
	this.element.delegate('.file', 'click', function(e) {
		self.element.children('.focus').removeClass('focus');
		$(this).addClass('focus');
		e.stopPropagation();
	});
	*/
	
	this.element.delegate('.file', 'mousedown', function(e) {
	    console.log('in file mouse down');
		self.element.children('.focus').removeClass('focus');
		$(this).addClass('focus');
		switch(e.which){
		case 3:
		    var contents = ['打开', '编辑', '删除', '属性'];
		    var popup_menu = self.gen_popup_menu(contents);
            self.element.append(popup_menu);            
            //var offset = self.element.parent().offset();
            //console.log('page:', e.pageX, e.pageY);
            //console.log('offset:', offset.left, offset.top);
//    		console.log('e.target', e.target.toString());
            self.element.children('.dropdown-menu').css({
                'display':'block',
                'position': 'fixed',
                'left': (e.pageX) + 'px',
                'top': (e.pageY) + 'px'
                //'left': (e.pageX - offset.left) + 'px',
                //'top': (e.pageY - offset.top) + 'px'
            });
            var file = this;
            $(popup_menu).on('mousedown', function(e){
                //console.log('in popup menu e.target', $(e.target).text());
                console.log('right button for ', $(file).attr('data-path'));
                console.log('contents', contents);
                for(var i=0; i<contents.length; i++){
                    if($(e.target).text() == contents[i]){
                        console.log(contents[i] + 'is clicked');
                    }                
                }
		        //e.stopPropagation();  
            });
            break;
        case 1:
            self.element.children('.dropdown-menu').css({'display':'none'});
            break;
        }
		e.stopPropagation();
	});
	// Double click on file
	this.element.delegate('.file', 'dblclick', function() {
	    var file_json = self.find_json_by_path($(this).attr('data-path'));
	    var file_path = file_json.path;
	    //console.log('file_json:', file_json);
	    if(file_json){
		    self.emit('navigate', file_json);//mime.stat(file_path, file_type)
		}
	});
	//to prevent default context menu
    $('body').bind('contextmenu', function(e) {
        return false;
    });
}
util.inherits(Folder, events.EventEmitter);

Folder.prototype.gen_popup_menu = function(contents){
    this.element.children('.dropdown-menu').remove();
    var menu = $('<ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu"></ul>');
    $(menu).attr({
        'class':'dropdown-menu',
        'role':'menu',
        'aria-labelledby': 'dropdownMenu'
    });
    var items = [];
    for(var i=0; i<contents.length; i++){
        items.push('<li><a tabindex="-1" href="#">' + contents[i] + '</a></li>');
    }
    $(menu).html(items.join('\n'));    
    //<li class="divider"></li>
    return menu;
}
var global_self;
var global_dir;
var file_arch_json = {};
Folder.prototype.find_json_by_path = function(filepath){
    var all = file_arch_json[global_dir];
    //console.log('global_dir', global_dir);
    //console.log('filepath', filepath);
    //console.log('file_arch_json[global_dir]', file_arch_json[global_dir]);
    var file = false;
    for(var i=0; i<all.length; i++){
        if(all[i].path == filepath){
            file = all[i];
            break;
        }
    }
    return file;
}
Folder.prototype.get_callback_data = function(data_json){
	console.log('data from server:', data_json);
	switch(global_dir){
	case 'root':
	    for(var i=0; i<data_json.length; i++){
	        data_json[i]['path'] = 'root/'+data_json[i]['type'];
	        data_json[i]['name'] = data_json[i]['type'];
	        data_json[i]['type'] = 'folder';	    
	    }
	    //global_self.gen_side_bar(data_json);	    
		global_self.emit('folder_set_favorites', data_json);//mime.stat(file_path, file_type)
	    break;
    case 'root/Contacts':
	    for(var i=0; i<data_json.length; i++){
	        //data_json[i]['img'] = data_json[i]['photoPath'];
	        data_json[i]['path'] = 'root/Contacts/'+data_json[i]['name']; 
	        data_json[i]['type'] = 'image';
	    }
        break;
    case 'root/Pictures':
	    for(var i=0; i<data_json.length; i++){
	        data_json[i]['img'] = data_json[i]['path'];
	        data_json[i]['path'] = 'root/Pictures/'+data_json[i]['filename'];
	        data_json[i]['name'] = data_json[i]['filename'];      
	        data_json[i]['type'] = 'text';
	    }
        break;
    case 'root/Videos':
	    for(var i=0; i<data_json.length; i++){
	        data_json[i]['path'] = 'root/Videos/'+data_json[i]['filename'];
	        data_json[i]['name'] = data_json[i]['filename'];
	        //data_json[i]['img'] = '.'+data_json[i]['photoPath'];	        
	        data_json[i]['type'] = 'movie';
	    }
        break;
    default:
        break;
	}
	file_arch_json[global_dir] = data_json;
	//console.log('data from server after treat:', data_json);
	global_self.element.html(gen_files_view(data_json));
}


Folder.prototype.open = function(dir) {
	global_self = this;
	global_dir = dir;
	switch(global_dir){
	case 'root':
	    getAllCateFromHttp(this.get_callback_data);
	    //netcomm.getAllCateFromLocal(this.get_callback_data);
	    break;
    case 'root/Contacts':
        getAllContactsFromHttp(this.get_callback_data);
        //netcomm.getAllContactsFromLocal(this.get_callback_data);
        break;
    case 'root/Pictures':
        getAllDataByCateFromHttp(this.get_callback_data, 'Pictures');
        //netcomm.getAllDataByCateFromLocal(this.get_callback_data, 'Pictures');
        break;
    case 'root/Videos':
        getAllDataByCateFromHttp(this.get_callback_data, 'Videos');
        //netcomm.getAllDataByCateFromLocal(this.get_callback_data, 'Videos');
        break;
    default:
        window.alert('Path '+global_dir+' does not exist.');
        break;
	}
}

exports.Folder = Folder;
//data from server:
//root:
//[{"id":"0#101","type":"Contacts","path":"./resources/logo/contacts.png"},{"id":"0#102","type":"Pictures","path":"./resources/logo/pictures.png"},{"id":"0#103","type":"Videos","path":"./resources/logo/videos.png"}]
//Contact:
//[{"id":"1#1","name":"Lily","photoPath":"./resources/contacts/boy.jpg"},{"id":"1#2","name":"zhang","photoPath":"./resources/contacts/city3.jpg"},{"id":"1#3","name":"wang","photoPath":"./resources/contacts/girl1.jpg"},{"id":"1#4","name":"li","photoPath":"./resources/contacts/girl2.jpg"},{"id":"1#5","name":"zhao","photoPath":"./resources/contacts/girl3.jpg"},{"id":"1#13","name":"zhang","photoPath":"./resource/photo/test.jpg"},{"id":"1#1000014","name":"zhang","photoPath":"./resource/photo/test.jpg"}]
//Pictures
// [{"id":"2#1","filename":"jianmin","postfix":"jpg","path":"/home/v1/demo-rio/nodewebkit/resources/contactsphoto/jianmin.jpg"},{"id":"2#2","filename":"wangyu","postfix":"jpg","path":"/home/v1/demo-rio/nodewebkit/resources/contactsphoto/wangyu.jpg"},{"id":"2#3","filename":"xifei","postfix":"jpg","path":"/home/v1/demo-rio/nodewebkit/resources/contactsphoto/xifei.jpg"},{"id":"2#4","filename":"yuanzhe","postfix":"jpg","path":"/home/v1/demo-rio/nodewebkit/resources/contactsphoto/yuanzhe.jpg"},{"id":"2#5","filename":"contacts","postfix":"png","path":"/home/v1/demo-rio/nodewebkit/resources/logo/contacts.png"},{"id":"2#6","filename":"pictures","postfix":"png","path":"/home/v1/demo-rio/nodewebkit/resources/logo/pictures.png"},{"id":"2#7","filename":"city1","postfix":"jpg","path":"/home/v1/demo-rio/nodewebkit/resources/pictures/city1.jpg"},{"id":"2#8","filename":"city4","postfix":"jpg","path":"/home/v1/demo-rio/nodewebkit/resources/pictures/city4.jpg"},{"id":"2#9","filename":"city3","postfix":"jpg","path":"/home/v1/demo-rio/nodewebkit/resources/pictures/city3.jpg"},{"id":"2#10","filename":"city2","postfix":"jpg","path":"/home/v1/demo-rio/nodewebkit/resources/pictures/city2.jpg"},{"id":"2#11","filename":"girl2","postfix":"jpg","path":"/home/v1/demo-rio/nodewebkit/resources/pictures/girl2.jpg"},{"id":"2#12","filename":"girl3","postfix":"jpg","path":"/home/v1/demo-rio/nodewebkit/resources/pictures/girl3.jpg"},{"id":"2#13","filename":"vessel1","postfix":"jpg","path":"/home/v1/demo-rio/nodewebkit/resources/pictures/vessel1.jpg"},{"id":"2#14","filename":"Penguins","postfix":"jpg","path":"/home/v1/demo-rio/nodewebkit/resources/pictures/Penguins.jpg"},{"id":"2#15","filename":"city5","postfix":"jpg","path":"/home/v1/demo-rio/nodewebkit/resources/pictures/city5.jpg"},{"id":"2#16","filename":"wangtan","postfix":"jpg","path":"/home/v1/demo-rio/nodewebkit/resources/contactsphoto/wangtan.jpg"},{"id":"2#17","filename":"wuxiang","postfix":"jpg","path":"/home/v1/demo-rio/nodewebkit/resources/contactsphoto/wuxiang.jpg"},{"id":"2#18","filename":"boy","postfix":"jpg","path":"/home/v1/demo-rio/nodewebkit/resources/pictures/boy.jpg"},{"id":"2#19","filename":"cat","postfix":"jpg","path":"/home/v1/demo-rio/nodewebkit/resources/pictures/cat.jpg"},{"id":"2#20","filename":"videos","postfix":"png","path":"/home/v1/demo-rio/nodewebkit/resources/logo/videos.png"},{"id":"2#21","filename":"vessel2","postfix":"jpg","path":"/home/v1/demo-rio/nodewebkit/resources/pictures/vessel2.jpg"},{"id":"2#22","filename":"wangfeng","postfix":"jpg","path":"/home/v1/demo-rio/nodewebkit/resources/contactsphoto/wangfeng.jpg"},{"id":"2#23","filename":"girl1","postfix":"jpg","path":"/home/v1/demo-rio/nodewebkit/resources/pictures/girl1.jpg"}]
//Videos
//[{"id":"3#1","filename":null,"postfix":"flv","path":"./resources/videos/test1.flv"},{"id":"3#2","filename":null,"postfix":"flv","path":"./resources/videos/test2.flv"},{"id":"3#3","filename":null,"postfix":"flv","path":"./resources/videos/test3.flv"},{"id":"3#4","filename":null,"postfix":"hlv","path":"./resources/videos/test4.hlv"},{"id":"3#10000005","filename":null,"postfix":"hlv","path":"./resources/videos/test5.hlv"}]
/*
	files = [
			{
				"name" : "bootstrap",
				"path" : "/home/cos/Templates/node-webkit-v0.9.2-linux-ia32_and_example/file-explorer/bootstrap",
				"type" : "folder"
			},
			{
				"name" : "bundle.js",
				"path" : "/home/cos/Templates/node-webkit-v0.9.2-linux-ia32_and_example/file-explorer/bundle.js",
				"type" : "blank"
			},
			{
				"name" : "icons",
				"path" : "/home/cos/Templates/node-webkit-v0.9.2-linux-ia32_and_example/file-explorer/icons",
				"type" : "folder"
			},
			{
				"name" : "images",
				"path" : "/home/cos/Templates/node-webkit-v0.9.2-linux-ia32_and_example/file-explorer/images",
				"type" : "folder"
			},
			{
				"name" : "index.html",
				"path" : "/home/cos/Templates/node-webkit-v0.9.2-linux-ia32_and_example/file-explorer/index.html",
				"type" : "html"
			},
			{
				"name" : "js",
				"path" : "/home/cos/Templates/node-webkit-v0.9.2-linux-ia32_and_example/file-explorer/js",
				"type" : "folder"
			},
			{
				"name" : "main.js",
				"path" : "/home/cos/Templates/node-webkit-v0.9.2-linux-ia32_and_example/file-explorer/main.js",
				"type" : "blank"
			},
			{
				"name" : "node_modules",
				"path" : "/home/cos/Templates/node-webkit-v0.9.2-linux-ia32_and_example/file-explorer/node_modules",
				"type" : "folder"
			},
			{
				"name" : "package.json",
				"path" : "/home/cos/Templates/node-webkit-v0.9.2-linux-ia32_and_example/file-explorer/package.json",
				"type" : "blank"
			},
			{
				"name" : "README.md",
				"path" : "/home/cos/Templates/node-webkit-v0.9.2-linux-ia32_and_example/file-explorer/README.md",
				"type" : "text"
			},
			{
				"name" : "style.css",
				"path" : "/home/cos/Templates/node-webkit-v0.9.2-linux-ia32_and_example/file-explorer/style.css",
				"type" : "css"
			} ];
*/
